BlogBundle\Entity\Entry:
    type: entity
    table: entries
    repositoryClass: BlogBundle\Repository\EntryRepository
    indexes:
        fk_entries_users:
            columns:
                - user_id
        fk_entries_categories:
            columns:
                - category_id
    id:
        id:
            type: integer
            nullable: false
            options:
                unsigned: false
            id: true
            generator:
                strategy: IDENTITY
    fields:
        title:
            type: string
            nullable: true
            length: 255
            options:
                fixed: false
        content:
            type: text
            nullable: true
            length: 65535
            options:
                fixed: false
        status:
            type: string
            nullable: true
            length: 20
            options:
                fixed: false
        image:
            type: string
            nullable: true
            length: 255
            options:
                fixed: false
    manyToOne:
        category:
            targetEntity: Category
            cascade: {  }
            fetch: LAZY
            mappedBy: null    # Solo se llena si el campo en la BD se llama diferente a 'category_id' en este caso
            inversedBy: entry # Agregamos el nombre de referencia del campo de la entidad que la que se relaciona
            joinColumns:
                category_id: # Este nombre se puede cambiar pero por defecto lo crea con el nombre del campo seguido de _id
                    referencedColumnName: id
            orphanRemoval: false
        user:
            targetEntity: User
            cascade: {  }
            fetch: LAZY
            mappedBy: null      # Solo se llena si el campo en la BD se llama diferente a 'user_id' en este caso
            inversedBy: null
            joinColumns:
                user_id:       # Este nombre se puede cambiar pero por defecto lo crea con el nombre del campo seguido de _id
                    referencedColumnName: id
            orphanRemoval: false
    # Establecemos una relación One-To-Many
    # Una entrada puede tener muchas Tags
    oneToMany:                              # Tipo de relación
        entryTag:                           # Nombre del "campo" referencia de la entidad en Doctrine
            targetEntity: EntryTag          # Nombre de la entidad en Symfony
            mappedBy: entry                 # Nombre del campo a Relacionar
            cascade: [ 'persist' ]
      # Finaliza relación
    lifecycleCallbacks: {  }
