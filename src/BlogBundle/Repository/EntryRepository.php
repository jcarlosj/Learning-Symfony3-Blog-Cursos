<?php

namespace BlogBundle\Repository;

use Doctrine\ORM\EntityRepository;
use BlogBundle\Entity\Tag;
use BlogBundle\Entity\Entry;
use BlogBundle\Entity\EntryTag;

/**
 * EntryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EntryRepository extends EntityRepository {

  public function addEntryTags( Entry $entry, $tags ) {
    # Guardamos los datos dentro de la entidad del ORM Doctrine
    #   NOTA: Cuando estamos dentro del Repositorio no es necesario usar getDoctrine() pues ya se encuentra disponible
    $em = $this -> getEntityManager();

    # Extraemos datos del repositorio de la entidad Category
    $tagRepository = $em -> getRepository( 'BlogBundle:Tag' );    # Accedemos al repositorio

    # Separa la cadena que contiene las etiquetas (tags) en un Array
    $tags = explode( ',', $tags );

    # Recorre el Array de etiquetas (Tags)
    foreach ( $tags as $tagName ) {
      $tagName = trim( $tagName );

      # Busca si el Tag existe
      $tag = $tagRepository -> findOneBy( array(
        'name' => $tagName
      ));

      # Valida si la bÃºsqueda encontro la etiqueta (Tag)
      if( count( $tag ) == 0 ) {  # No encuentra etiquetas
        $tag = $this -> addTag( $tagName );               # Agrega etiquetas
        $em -> persist( $tag );                           # Persistencia

      }
      $entryTag = $this -> addEntryTag( $entry, $tag );   # Asocia Entrada a sus respectivas Etiquetas
      $em -> persist( $entryTag );                        # Persistencia

    }
    # Volcamos los datos contenidos en la entidad del ORM Doctrine a la base de datos
    $flush = $em -> flush();

    return $flush;
  }

  # Crea Tag: Inserta etiquetas que no existen
  private function addTag( $tagName ) {
    $tag = new Tag();               # Crea Tag
    # Agrega los valores a los campos de la entidad
    $tag -> setName( $tagName );    # Agrega nombre al nuevo tag
    $tag -> setDescription(         # Agrega descripcion por defecto al tag
      'Complete descripciÃ³n para ' .$tagName. '.'
    );

    return $tag;
  }

  # Crea EntryTag: Asocia la etiqueta a la respectiva entrada
  private function addEntryTag( Entry $entry, $tag ) {
    $entryTag = new EntryTag();       # Crea EntryTag

    $entryTag -> setEntry( $entry );  # Agrega Entidad
    $entryTag -> setTag( $tag );      # Agrega Tag

    return $entryTag;
  }

}
